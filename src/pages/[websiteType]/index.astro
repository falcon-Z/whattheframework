---
import Main from "../../layouts/Main.astro";
import AppType from "../../components/questions/AppType.astro";
import StartOver from "../../components/StartOver.astro";
import Validator from "../../utils/Validator";
import FrameworkOptions from "../../components/FrameworkOptions.astro";
import FrameworkSelector from "../../utils/FrameworkSelector";
import { WebsiteType } from "../../data/types";
import { SupportingInfo } from "../../data/supporting-info";
import { shuffle } from "../../utils/tools";

const { params } = Astro;

if (!Validator.websiteType(params.websiteType)) {
  return Astro.redirect("/");
}

const options = FrameworkSelector({
  websiteType: params.websiteType,
  appType: params.appType,
});

const topPicks = shuffle(
  options.filter(
    (option) => option.websiteTypesInOrderOfPriority[0] === params.websiteType
  )
);

const otherPicks = shuffle(
  options.filter(
    (option) => option.websiteTypesInOrderOfPriority[0] !== params.websiteType
  )
);
---

<Main>
  <section class="container py-24 mx-auto">
    <h1 class="text-3xl text-center p-4">
      Your website is most probably a {
        SupportingInfo.websiteType[params.websiteType as WebsiteType].name
      }
    </h1>
    <h2 class="text-lg text-center mb-8">
      made up of {
        SupportingInfo.websiteType[params.websiteType as WebsiteType].technology
      }
    </h2>

    <hr />

    {params.websiteType !== WebsiteType.Static ? <AppType /> : ""}

    <h2 class="text-xl font-bold text-start p-4">
      Top picks for {
        SupportingInfo.websiteType[params.websiteType as WebsiteType].name
      }s
    </h2>
    <FrameworkOptions options={topPicks} allowFilter={true} />

    <h2 class="text-xl font-bold text-start p-4">
      Other frameworks that may also suit this type of website
    </h2>
    <FrameworkOptions options={otherPicks} />

    <div class="mt-16">
      <StartOver />
    </div>
  </section>
</Main>
